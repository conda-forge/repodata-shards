{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": true,
    "deactivate.d": false,
    "description": "Cppcheck is a static analysis tool for C/C++ code. Unlike C/C++ compilers and many other analysis tools it does not detect syntax errors in the code. Cppcheck primarily detects the types of bugs that the compilers normally do not detect. The goal is to detect only real errors in the code (i.e. have zero false positives).",
    "dev_url": "https://github.com/danmar/cppcheck",
    "doc_source_url": null,
    "doc_url": null,
    "home": "http://cppcheck.sourceforge.net/",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "GPL-3.0-or-later",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": "https://github.com/danmar/cppcheck/archive/2.1.tar.gz",
    "subdirs": [
      "linux-64"
    ],
    "summary": "A static analysis tool for C/C++ code.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1592280466,
    "version": "2.1"
  },
  "channeldata_version": 1,
  "feedstock": null,
  "labels": [
    "main"
  ],
  "package": "cppcheck-2.1-py36h831f99a_0.tar.bz2",
  "repodata": {
    "build": "py36h831f99a_0",
    "build_number": 0,
    "depends": [
      "libgcc-ng >=7.5.0",
      "libstdcxx-ng >=7.5.0",
      "pcre >=8.44,<9.0a0",
      "pygments",
      "python >=3.6,<3.7.0a0",
      "python_abi 3.6.* *_cp36m"
    ],
    "license": "GPL-3.0-or-later",
    "license_family": "GPL",
    "md5": "5dce2ec20c04bb2bb5626160dc5309ba",
    "name": "cppcheck",
    "sha256": "b28f2910538ac60be1e60d245f1355a7a4226099adee8e8708bf7f2d9de4da3a",
    "size": 1903994,
    "subdir": "linux-64",
    "timestamp": 1592280466905,
    "version": "2.1"
  },
  "repodata_version": 1,
  "subdir": "linux-64",
  "url": "https://github.com/regro/releases/releases/download/linux-64/cppcheck-2.1-py36h831f99a_0.tar.bz2/cppcheck-2.1-py36h831f99a_0.tar.bz2"
}