{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": true,
    "deactivate.d": false,
    "description": null,
    "dev_url": null,
    "doc_source_url": null,
    "doc_url": null,
    "home": "https://github.com/krahim/fftwtools",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "GPL (>= 2)",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": [
      "https://cran.r-project.org/src/contrib/fftwtools_0.9-8.tar.gz",
      "https://cran.r-project.org/src/contrib/Archive/fftwtools/fftwtools_0.9-8.tar.gz"
    ],
    "subdirs": [
      "linux-64"
    ],
    "summary": "Provides a wrapper for several 'FFTW' functions. This package provides access to the two-dimensional 'FFT', the multivariate 'FFT', and the one-dimensional real to complex 'FFT' using the 'FFTW3' library. The package includes the functions fftw() and mvfftw() which are designed to mimic the functionality of the R functions fft() and mvfft(). The 'FFT' functions have a parameter that allows them to not return the redundant complex conjugate when the input is real data.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 0,
    "version": "0.9_8"
  },
  "channeldata_version": 1,
  "feedstock": null,
  "labels": [
    "cf202003",
    "main"
  ],
  "package": "r-fftwtools-0.9_8-r3.3.2_0.tar.bz2",
  "repodata": {
    "build": "r3.3.2_0",
    "build_number": 0,
    "depends": [
      "fftw 3.3.6",
      "libgcc",
      "r-base 3.3.2*"
    ],
    "license": "GPL (>= 2)",
    "license_family": "GPL3",
    "md5": "9e6baab5723a00c65a4dd1044052905b",
    "name": "r-fftwtools",
    "sha256": "610e5aa54dcdce5438416d4037d928add015c4e6d27da6af140064cad814313f",
    "size": 160695,
    "subdir": "linux-64",
    "version": "0.9_8"
  },
  "repodata_version": 1,
  "subdir": "linux-64",
  "url": "https://conda.anaconda.org/conda-forge/linux-64/r-fftwtools-0.9_8-r3.3.2_0.tar.bz2"
}