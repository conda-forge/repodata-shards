{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": "NumPy-based implementation of Fast Fourier Transform using Intel (R) Math Kernel Library. Supports in-place and out-of-place, 1D and ND complex FFT on arrays of single and double precision with arbitrary memory layout, so long as array strides are multiples of its itemsize.",
    "dev_url": null,
    "doc_source_url": null,
    "doc_url": null,
    "home": "http://github.com/IntelPython/mkl_fft",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "BSD 3-Clause",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": "https://github.com/IntelPython/mkl_fft/archive/v1.2.1.tar.gz",
    "subdirs": [
      "linux-64"
    ],
    "summary": "NumPy-based implementation of Fast Fourier Transform using Intel (R) Math Kernel Library.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1613485039,
    "version": "1.2.1"
  },
  "channeldata_version": 1,
  "feedstock": null,
  "labels": [
    "main"
  ],
  "package": "mkl_fft-1.2.1-py38h5c078b8_1.tar.bz2",
  "repodata": {
    "build": "py38h5c078b8_1",
    "build_number": 1,
    "depends": [
      "libgcc-ng >=9.3.0",
      "mkl >=2020.4,<2021.0a0",
      "numpy >=1.16.6,<2.0a0",
      "python >=3.8,<3.9.0a0",
      "python_abi 3.8.* *_cp38"
    ],
    "license": "BSD 3-Clause",
    "md5": "de7e6f97ca35a9ad7cea30cd87f18c05",
    "name": "mkl_fft",
    "sha256": "cb59b615be78a1a71f4e74d0b9da5253308aaef3f243decae9d14851bf2155bc",
    "size": 192129,
    "subdir": "linux-64",
    "timestamp": 1613485039701,
    "version": "1.2.1"
  },
  "repodata_version": 1,
  "subdir": "linux-64",
  "url": "https://conda.anaconda.org/conda-forge/linux-64/mkl_fft-1.2.1-py38h5c078b8_1.tar.bz2"
}