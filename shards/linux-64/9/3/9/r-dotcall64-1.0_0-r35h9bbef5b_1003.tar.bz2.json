{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": null,
    "dev_url": null,
    "doc_source_url": null,
    "doc_url": null,
    "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "GPL (>= 2)",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": [
      "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-0.tar.gz",
      "https://cran.r-project.org/src/contrib/dotCall64_1.0-0.tar.gz"
    ],
    "subdirs": [
      "linux-64"
    ],
    "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1563397003,
    "version": "1.0_0"
  },
  "channeldata_version": 1,
  "feedstock": null,
  "labels": [
    "cf202003",
    "main"
  ],
  "package": "r-dotcall64-1.0_0-r35h9bbef5b_1003.tar.bz2",
  "repodata": {
    "build": "r35h9bbef5b_1003",
    "build_number": 1003,
    "depends": [
      "libgcc-ng >=7.3.0",
      "r-base >=3.5,<3.6.0a0"
    ],
    "license": "GPL (>= 2)",
    "license_family": "GPL3",
    "md5": "26774b509679451e8b23b00752f06e3a",
    "name": "r-dotcall64",
    "sha256": "15edf59f259e0fdcbede12a6f16b6d775a17b374a0294d6b7b9fade8e4762baf",
    "size": 49577,
    "subdir": "linux-64",
    "timestamp": 1563397003583,
    "version": "1.0_0"
  },
  "repodata_version": 1,
  "subdir": "linux-64",
  "url": "https://github.com/regro/releases/releases/download/linux-64/r-dotcall64-1.0_0-r35h9bbef5b_1003.tar.bz2/r-dotcall64-1.0_0-r35h9bbef5b_1003.tar.bz2"
}