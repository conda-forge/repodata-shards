{"channeldata":{"activate.d":false,"binary_prefix":false,"deactivate.d":false,"description":"The pyparsing module is an alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions. The pyparsing module provides a library of classes that client code uses to construct the grammar directly in Python code.","dev_url":"https://svn.code.sf.net/p/pyparsing/code/","doc_source_url":null,"doc_url":"http://pyparsing.wikispaces.com/Documentation","home":"http://pyparsing.wikispaces.com/","icon_hash":null,"icon_url":null,"identifiers":null,"keywords":null,"license":"MIT","post_link":false,"pre_link":false,"pre_unlink":false,"recipe_origin":null,"run_exports":{},"source_git_url":null,"source_url":"https://pypi.io/packages/source/p/pyparsing/pyparsing-2.4.7.tar.gz","subdirs":["win-64"],"summary":"Create and execute simple grammars","tags":null,"text_prefix":false,"timestamp":1586197623,"version":"2.1.1"},"channeldata_version":1,"feedstock":null,"labels":["main"],"package":"pyparsing-2.1.1-py35_0.tar.bz2","repodata":{"arch":"x86_64","build":"py35_0","build_number":0,"constrains":["python_abi * *_cp35m"],"depends":["python 3.5*"],"license":"MIT","license_family":"MIT","md5":"c3ba06f5f178a561096e1be7e2839bc1","name":"pyparsing","platform":"win","sha256":"1808dd4638c5497acefa9a8e0eb1b6ead8acda6ebc2ad7950549fd1be269ea99","size":71190,"subdir":"win-64","version":"2.1.1"},"repodata_version":1,"subdir":"win-64","url":"https://conda.anaconda.org/conda-forge/win-64/pyparsing-2.1.1-py35_0.tar.bz2"}