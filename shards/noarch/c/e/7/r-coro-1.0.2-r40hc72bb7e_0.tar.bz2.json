{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": null,
    "dev_url": null,
    "doc_source_url": null,
    "doc_url": null,
    "home": "https://github.com/r-lib/coro",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "MIT",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": [
      "https://cran.r-project.org/src/contrib/Archive/coro/coro_1.0.2.tar.gz",
      "https://cran.r-project.org/src/contrib/coro_1.0.2.tar.gz"
    ],
    "subdirs": [
      "noarch"
    ],
    "summary": "Provides 'coroutines' for R, a family of functions that can be suspended and resumed later on. This includes 'async' functions (which await) and generators (which yield). 'Async' functions are based on the concurrency framework of the 'promises' package. Generators are based on a dependency free iteration protocol defined in 'coro' and are compatible with iterators from the 'reticulate' package.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1638558237,
    "version": "1.0.2"
  },
  "channeldata_version": 1,
  "feedstock": "r-coro-feedstock",
  "labels": [
    "main"
  ],
  "package": "r-coro-1.0.2-r40hc72bb7e_0.tar.bz2",
  "repodata": {
    "build": "r40hc72bb7e_0",
    "build_number": 0,
    "depends": [
      "r-base >=4.0,<4.1.0a0",
      "r-rlang >=0.4.9"
    ],
    "license": "MIT",
    "license_family": "MIT",
    "md5": "b560247d7267ee4aa18f7ab12914d9e7",
    "name": "r-coro",
    "noarch": "generic",
    "sha256": "5fc5794029c66787e2ba629e92c73c97f4895bf9677bec203e5b3c19038f8dd0",
    "size": 151780,
    "subdir": "noarch",
    "timestamp": 1638558237561,
    "version": "1.0.2"
  },
  "repodata_version": 1,
  "subdir": "noarch",
  "url": "https://github.com/conda-forge/releases/releases/download/noarch/r-coro-1.0.2-r40hc72bb7e_0.tar.bz2/r-coro-1.0.2-r40hc72bb7e_0.tar.bz2"
}