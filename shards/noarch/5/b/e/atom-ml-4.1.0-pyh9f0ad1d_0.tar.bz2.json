{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": "There is no magic formula in data science that can tell us which type of machine learning algorithm will perform best for a specific use-case. Different models are better suited for different types of data and different problems. At best, you can follow some rough guide on how to approach problems with regard to which model to try on your data, but these are often more confusing than helpful. Best practices tell us to start with a simple model (e.g. linear regression) and build up to more complicated models (e.g. logistic regression -> random forest -> multi-layer perceptron) if you are not satisfied with the results. Unfortunately, different models require different data cleaning steps, different type/amount of features, tuning a new set of hyperparameters, etc. Refactoring the code for this purpose can be quite boring and time consuming. Because of this, many data scientists end up just using the model best known to them and fine-tuning this particular model without ever trying different ones. This can result in poor performance (because the model is just not the right one for the task) or in poor time management (because you could have achieved a similar performance with a simpler/faster model).  ATOM is here to help us solve these issues. With just a few lines of code, you can perform basic data cleaning steps, select relevant features and compare the performance of multiple models on a given dataset. ATOM should be able to provide quick insights on which algorithms perform best for the task at hand and provide an indication of the feasibility of the ML solution.  It is important to realize that ATOM is not here to replace all the work a data scientist has to do before getting his model into production. ATOM doesn't spit out production-ready models just by tuning some parameters in its API. After helping you to determine the right model, you will most probably need to fine-tune it using use-case specific features and data cleaning steps in order to achieve maximum performance.  So, this sounds a bit like AutoML, how is ATOM different than auto-sklearn or TPOT? Well, ATOM does AutoML in the sense that it helps you find the best model for a specific task, but contrary to the aforementioned packages, it does not actively search for the best model. It simply runs all of them and let you pick the one that you think suites you best. AutoML packages are often black boxes: if you provide data, it will magically return a working model. Although it works great, they often produce complicated pipelines with low explainability, hard to sell to the business. In this, ATOM excels. Every step of the pipeline is accounted for, and using the provided plotting methods, it\u2019s easy to demonstrate why a model is better/worse than the other.",
    "dev_url": "http://github.com/tvdboom/ATOM/tree/development",
    "doc_source_url": "http://github.com/tvdboom/ATOM/docs_sources",
    "doc_url": "http://github.com/tvdboom/ATOM/docs",
    "home": "http://github.com/tvdboom/ATOM",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "MIT",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": "https://pypi.io/packages/source/a/atom-ml/atom-ml-4.1.0.tar.gz",
    "subdirs": [
      "noarch"
    ],
    "summary": "A Python AutoML tool for fast exploration and experimentation of supervised machine learning pipelines.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1602835829,
    "version": "4.1.0"
  },
  "channeldata_version": 1,
  "feedstock": "atom-ml-feedstock",
  "labels": [
    "main"
  ],
  "package": "atom-ml-4.1.0-pyh9f0ad1d_0.tar.bz2",
  "repodata": {
    "build": "pyh9f0ad1d_0",
    "build_number": 0,
    "depends": [
      "category_encoders",
      "featuretools",
      "gplearn",
      "imbalanced-learn",
      "joblib",
      "matplotlib-base",
      "numpy",
      "pandas",
      "pandas-profiling",
      "python >=3.6",
      "scikit-learn",
      "scikit-optimize",
      "scipy",
      "seaborn",
      "shap",
      "tabulate",
      "tqdm",
      "typeguard"
    ],
    "license": "MIT",
    "md5": "4b267b458c16d9eacf59055e8cf10053",
    "name": "atom-ml",
    "noarch": "python",
    "sha256": "e7268c9587c62d32847c28288c5e1db06091c70f12af742d4f542f87e1d24598",
    "size": 88375,
    "subdir": "noarch",
    "timestamp": 1602835829269,
    "version": "4.1.0"
  },
  "repodata_version": 1,
  "subdir": "noarch",
  "url": "https://github.com/regro/releases/releases/download/noarch/atom-ml-4.1.0-pyh9f0ad1d_0.tar.bz2/atom-ml-4.1.0-pyh9f0ad1d_0.tar.bz2"
}