{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": "The pyparsing module is an alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions. The pyparsing module provides a library of classes that client code uses to construct the grammar directly in Python code.",
    "dev_url": "https://svn.code.sf.net/p/pyparsing/code/",
    "doc_source_url": null,
    "doc_url": "http://pyparsing.wikispaces.com/Documentation",
    "home": "http://pyparsing.wikispaces.com/",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "MIT",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": "https://pypi.io/packages/source/p/pyparsing/pyparsing-2.3.0.tar.gz",
    "subdirs": [
      "noarch"
    ],
    "summary": "Create and execute simple grammars",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1540989747,
    "version": "2.3.0"
  },
  "channeldata_version": 1,
  "feedstock": null,
  "labels": [
    "main",
    "cf202003"
  ],
  "package": "pyparsing-2.3.0-py_0.tar.bz2",
  "repodata": {
    "build": "py_0",
    "build_number": 0,
    "depends": [
      "python"
    ],
    "license": "MIT",
    "md5": "788d8381d795dfc286151b6e743997c6",
    "name": "pyparsing",
    "noarch": "python",
    "sha256": "a7f3368d0c25fda5bb0c91bbb0ae1e3f575df354e6ca6e62897d4dc84f679a31",
    "size": 53875,
    "subdir": "noarch",
    "timestamp": 1540989747568,
    "version": "2.3.0"
  },
  "repodata_version": 1,
  "subdir": "noarch",
  "url": "https://conda.anaconda.org/conda-forge/noarch/pyparsing-2.3.0-py_0.tar.bz2"
}