{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": null,
    "dev_url": null,
    "doc_source_url": null,
    "doc_url": null,
    "home": "https://github.com/jwood000/RcppAlgos, https://gmplib.org/, https://github.com/kimwalisch/primesieve, http://libdivide.com, https://github.com/kimwalisch/primecount, http://ridiculousfish.com/, http://sweet.ua.pt/tos/software/prime_sieve.html",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "GPL-2.0-or-later",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": [
      "https://cran.r-project.org/src/contrib/Archive/RcppAlgos/RcppAlgos_2.5.3.tar.gz",
      "https://cran.r-project.org/src/contrib/RcppAlgos_2.5.3.tar.gz"
    ],
    "subdirs": [
      "osx-64"
    ],
    "summary": "Provides optimized functions and flexible combinatorial iterators implemented in C++ with 'Rcpp' for solving problems in combinatorics and computational mathematics. Utilizes parallel programming via 'RcppThread' for maximal performance. Also makes use of the RMatrix class from the 'RcppParallel' library. There are combination/permutation functions with constraint parameters that allow for generation of all results of a vector meeting specific criteria (e.g. generating integer partitions/compositions or finding all combinations such that the sum is between two bounds). Capable of generating specific combinations/permutations (e.g. retrieve only the nth lexicographical result) which sets up nicely for parallelization as well as random sampling. Gmp support permits exploration where the total number of results is large (e.g. comboSample(10000, 500, n = 4)). Additionally, there are several high performance number theoretic functions that are useful for problems common in computational mathematics. Some of these functions make use of the fast integer division library 'libdivide'. The primeSieve function is based on the segmented sieve of Eratosthenes implementation by Kim Walisch. It is also efficient for large numbers by using the cache friendly improvements originally developed by Tom\u00E1s Oliveira. Finally, there is a prime counting function that implements Legendre's formula based on the work of Kim Walisch.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1648766564,
    "version": "2.5.3"
  },
  "channeldata_version": 1,
  "feedstock": "r-rcppalgos-feedstock",
  "labels": [
    "main"
  ],
  "package": "r-rcppalgos-2.5.3-r40hfbe6f5e_0.tar.bz2",
  "repodata": {
    "build": "r40hfbe6f5e_0",
    "build_number": 0,
    "depends": [
      "gmp >=6.2.1,<7.0a0",
      "libcxx >=12.0.1",
      "r-base >=4.0,<4.1.0a0",
      "r-cpp11",
      "r-gmp"
    ],
    "license": "GPL-2.0-or-later",
    "license_family": "GPL2",
    "md5": "e2edefdd283ac41d938fdabe28f0ab18",
    "name": "r-rcppalgos",
    "sha256": "eb166126d7cf5eb15ac8c5ce8005d740b59ec2510172a5536edafa931bfb9cbb",
    "size": 985792,
    "subdir": "osx-64",
    "timestamp": 1648766564916,
    "version": "2.5.3"
  },
  "repodata_version": 1,
  "subdir": "osx-64",
  "url": "https://github.com/conda-forge/releases/releases/download/osx-64/r-rcppalgos-2.5.3-r40hfbe6f5e_0.tar.bz2/r-rcppalgos-2.5.3-r40hfbe6f5e_0.tar.bz2"
}