{"channeldata":{"activate.d":false,"binary_prefix":false,"deactivate.d":false,"description":null,"dev_url":null,"doc_source_url":null,"doc_url":null,"home":"https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf","icon_hash":null,"icon_url":null,"identifiers":null,"keywords":null,"license":"GPL-2","post_link":false,"pre_link":false,"pre_unlink":false,"recipe_origin":null,"run_exports":{},"source_git_url":null,"source_url":["https://cran.r-project.org/src/contrib/Archive/sqldf/sqldf_0.4-11.tar.gz","https://cran.r-project.org/src/contrib/sqldf_0.4-11.tar.gz"],"subdirs":["osx-64"],"summary":"The sqldf() function is typically passed a single argument which  is an SQL select statement where the table names are ordinary R data  frame names.  sqldf() transparently sets up a database, imports the  data frames into that database, performs the SQL select or other statement and returns the result using a heuristic to determine which  class to assign to each column of the returned data frame.  The sqldf()  or read.csv.sql() functions can also be used to read filtered files  into R even if the original files are larger than R itself can handle. 'RSQLite', 'RH2', 'RMySQL' and 'RPostgreSQL' backends are supported.","tags":null,"text_prefix":false,"timestamp":1588650100,"version":"0.4_10"},"channeldata_version":1,"feedstock":null,"labels":["main"],"package":"r-sqldf-0.4_10-r351_1.tar.bz2","repodata":{"build":"r351_1","build_number":1,"depends":["r-base >=3.5.1,<3.5.2.0a0","r-chron","r-dbi >=0.2_5","r-gsubfn >=0.6","r-proto","r-rsqlite >=1.0.0"],"license":"GPL-2","license_family":"GPL2","md5":"7a4ee706b040c3ab6425d7f7be580bd4","name":"r-sqldf","sha256":"767790db6c10bc0925e493605949e2ab4311763a31184dec195681781e5a70c7","size":81133,"subdir":"osx-64","timestamp":1539326827218,"version":"0.4_10"},"repodata_version":1,"subdir":"osx-64","url":"https://conda.anaconda.org/conda-forge/osx-64/r-sqldf-0.4_10-r351_1.tar.bz2"}