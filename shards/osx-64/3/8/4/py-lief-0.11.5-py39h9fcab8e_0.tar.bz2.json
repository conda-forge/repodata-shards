{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": "It turns out that many projects need to parse executable formats and they usually re-implement their own parser. Moreover these parsers are usually bound to one language. LIEF attempts to fill this void.",
    "dev_url": null,
    "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
    "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
    "home": "https://lief.quarkslab.com/",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "Apache-2.0",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {
      "0.11.5": {
        "weak": [
          "py-lief >=0.11.5,<0.12.0a0"
        ]
      }
    },
    "source_git_url": null,
    "source_url": null,
    "subdirs": [
      "osx-64"
    ],
    "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1622019380,
    "version": "0.11.5"
  },
  "channeldata_version": 1,
  "feedstock": "lief-feedstock",
  "labels": [
    "main"
  ],
  "package": "py-lief-0.11.5-py39h9fcab8e_0.tar.bz2",
  "repodata": {
    "build": "py39h9fcab8e_0",
    "build_number": 0,
    "depends": [
      "libcxx >=11.1.0",
      "liblief 0.11.5 he49afe7_0",
      "python >=3.9,<3.10.0a0",
      "python_abi 3.9.* *_cp39"
    ],
    "license": "Apache-2.0",
    "license_family": "Apache",
    "md5": "d558b71042a449a6d86406b35d272294",
    "name": "py-lief",
    "sha256": "5f054f8fd2423fcd2024887d13ffaf48c78a893c4412434eefa093659b3d65f2",
    "size": 1315080,
    "subdir": "osx-64",
    "timestamp": 1622019380852,
    "version": "0.11.5"
  },
  "repodata_version": 1,
  "subdir": "osx-64",
  "url": "https://github.com/conda-forge/releases/releases/download/osx-64/py-lief-0.11.5-py39h9fcab8e_0.tar.bz2/py-lief-0.11.5-py39h9fcab8e_0.tar.bz2"
}