{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": true,
    "deactivate.d": false,
    "description": null,
    "dev_url": null,
    "doc_source_url": null,
    "doc_url": null,
    "home": "https://rstudio.github.io/promises, https://github.com/rstudio/promises",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "MIT",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": [
      "https://cran.r-project.org/src/contrib/Archive/promises/promises_1.0.1.tar.gz",
      "https://cran.r-project.org/src/contrib/promises_1.0.1.tar.gz"
    ],
    "subdirs": [
      "osx-64"
    ],
    "summary": "Provides fundamental abstractions for doing asynchronous programming in R using promises. Asynchronous programming is useful for allowing a single R process to orchestrate multiple tasks in the background while also attending to something else. Semantics are similar to 'JavaScript' promises, but with a syntax that is idiomatic R.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1563350191,
    "version": "1.0.1"
  },
  "channeldata_version": 1,
  "feedstock": null,
  "labels": [
    "main"
  ],
  "package": "r-promises-1.0.1-r35hf99fc2c_1001.tar.bz2",
  "repodata": {
    "build": "r35hf99fc2c_1001",
    "build_number": 1001,
    "depends": [
      "libcxx >=4.0.1",
      "r-base >=3.5,<3.6.0a0",
      "r-later",
      "r-magrittr",
      "r-r6",
      "r-rcpp",
      "r-rlang"
    ],
    "license": "MIT",
    "license_family": "MIT",
    "md5": "a9dffb1998e3bd4c133214726c192dc6",
    "name": "r-promises",
    "sha256": "3dafb5f64926e65ca6bb27821cacd31bc3e7c16d6c17bc803289eb3f61cc401b",
    "size": 202697,
    "subdir": "osx-64",
    "timestamp": 1563350191317,
    "version": "1.0.1"
  },
  "repodata_version": 1,
  "subdir": "osx-64",
  "url": "https://conda.anaconda.org/conda-forge/osx-64/r-promises-1.0.1-r35hf99fc2c_1001.tar.bz2"
}