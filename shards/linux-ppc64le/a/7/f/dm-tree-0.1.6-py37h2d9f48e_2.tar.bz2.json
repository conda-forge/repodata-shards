{
  "channeldata": {
    "activate.d": false,
    "binary_prefix": false,
    "deactivate.d": false,
    "description": "tree is a library for working with nested data structures. In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.",
    "dev_url": "https://github.com/deepmind/tree",
    "doc_source_url": null,
    "doc_url": "https://tree.readthedocs.io/en/stable/",
    "home": "https://github.com/deepmind/tree",
    "icon_hash": null,
    "icon_url": null,
    "identifiers": null,
    "keywords": null,
    "license": "Apache-2.0",
    "post_link": false,
    "pre_link": false,
    "pre_unlink": false,
    "recipe_origin": null,
    "run_exports": {},
    "source_git_url": null,
    "source_url": "https://github.com/deepmind/tree/archive/refs/tags/0.1.6.tar.gz",
    "subdirs": [
      "linux-ppc64le"
    ],
    "summary": "Tree is a library for working with nested data structures.",
    "tags": null,
    "text_prefix": false,
    "timestamp": 1649444805,
    "version": "0.1.6"
  },
  "channeldata_version": 1,
  "feedstock": "dm-tree-feedstock",
  "labels": [
    "dm-tree_dev"
  ],
  "package": "dm-tree-0.1.6-py37h2d9f48e_2.tar.bz2",
  "repodata": {
    "build": "py37h2d9f48e_2",
    "build_number": 2,
    "depends": [
      "libgcc-ng >=10.3.0",
      "libstdcxx-ng >=10.3.0",
      "pypy3.7 >=7.3.7",
      "python >=3.7,<3.8.0a0",
      "python_abi 3.7 *_pypy37_pp73"
    ],
    "license": "Apache-2.0",
    "license_family": "Apache",
    "md5": "eb09dc090fd93f9f45cb99b94e14bb8b",
    "name": "dm-tree",
    "sha256": "ccebc59fbd59cf91d7ab7eb549a786ad7f1ea03dffbd59af5b9b12147fa4e2c4",
    "size": 178213,
    "subdir": "linux-ppc64le",
    "timestamp": 1649444805601,
    "version": "0.1.6"
  },
  "repodata_version": 1,
  "subdir": "linux-ppc64le",
  "url": "https://github.com/conda-forge/releases/releases/download/linux-ppc64le/dm-tree-0.1.6-py37h2d9f48e_2.tar.bz2/dm-tree-0.1.6-py37h2d9f48e_2.tar.bz2"
}